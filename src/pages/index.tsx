import { Inter } from "next/font/google";
import Head from "next/head";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

function Home() {
  const [latitude, setLatitude] = useState(null);
  const [longitude, setLongitude] = useState(null);
  const [locationData, setLocationData] = useState(null);

  useEffect(() => {
    function getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
      } else {
        console.log("Geolocation not supported");
      }
    }

    async function showPosition(position) {
      const { latitude, longitude } = position.coords;
      setLatitude(latitude);
      setLongitude(longitude);

      const response = await fetch(
        `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`
      );
      const result = await response.json();
      console.log("Result: ", result);

      if (result) {
        setLocationData(result);
        console.log("Location data:", result);
      } else {
        console.log("Location data not found in the API response.");
      }
    }

    //!initialize Leaflet map
    const map = L.map("map").setView([51.505, -0.09], 13);
    L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
      maxZoom: 19,
      attribution:
        '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
    }).addTo(map);
    const marker = L.marker([51.5, -0.09]).addTo(map);
    const circle = L.circle([51.508, -0.11], {
      color: "red",
      fillColor: "#f03",
      fillOpacity: 0.5,
      radius: 500,
    }).addTo(map);
    const polygon = L.polygon([
      [51.509, -0.08],
      [51.503, -0.06],
      [51.51, -0.047],
    ]).addTo(map);
    marker.bindPopup("<b>Hello world!</b><br>I am a popup.").openPopup();
    circle.bindPopup("I am a circle.");
    polygon.bindPopup("I am a polygon.");

    getLocation();

    //!cleanup-function
    return () => {
      map.remove();
    };
  }, []);

  return (
    <>
      <Head>
        <title>LiLu</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />

        <script
          src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
          integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
          crossOrigin=""
        ></script>
      </Head>
      <link
        rel="stylesheet"
        href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
        crossOrigin=""
      />

      <div className="bg-red-50 p-8">
        <h1 className="text-3xl font-semibold mb-4">
          LiLu - Your Virtual Midwife
        </h1>
        {latitude && longitude && locationData && (
          <div className="text-lg">
            <p>
              <span className="font-semibold">Latitude:</span> {latitude}
            </p>
            <p>
              <span className="font-semibold">Longitude:</span> {longitude}
            </p>
            <p>
              <span className="font-semibold">Your Location:</span>{" "}
              {locationData.city}
            </p>
          </div>
        )}
        {/* map container */}
        <div id="map" className="h-96">
          map:
        </div>
      </div>
    </>
  );
}

export default Home;
