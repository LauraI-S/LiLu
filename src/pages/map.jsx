// import React, { useEffect, useState } from "react";
// import Head from "next/head";
// // import L from "leaflet"; // Import the Leaflet library

// function Map() {
//   //REVIEW If you want to create a map with several pointers, this component could recieve as propos an array of coordinates "function Map({arrayOfCoords}) {....}" , and then later
//   //in the useEffect, you shoukld generate de Marker element inside a loop: arrayOfcoords.map((singlePairOfCoords)=> const Marker =L.marker([singlePairOfCoords.longitude,singlePairOfCoords.longitude]).addTo(map); )
//   const [coordinates, setCoordinates] = useState({ latitude: 0, longitude: 0 });
//   const [latitude, setLatitude] = useState(null);
//   const [longitude, setLongitude] = useState(null);
//   const [locationData, setLocationData] = useState(null);

//   useEffect(() => {
//     function getLocation() {
//       if (navigator.geolocation) {
//         navigator.geolocation.getCurrentPosition(showPosition);
//       } else {
//         console.log("Geolocation not supported");
//       }
//     }

//     async function showPosition(position) {
//       const { latitude, longitude } = position.coords;
//       setLatitude(latitude);
//       setLongitude(longitude);

//       const response = await fetch(
//         `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`
//       );
//       const result = await response.json();
//       console.log("Result: ", result);

//       if (result) {
//         setLocationData(result);
//         console.log("Location data:", result);
//       } else {
//         console.log("Location data not found in the API response.");
//       }
//     }
//     getLocation();
//   }, []);

//   function getLocation() {
//     if (navigator.geolocation) {
//       navigator.geolocation.getCurrentPosition(getCoordinates);
//     } else {
//       console.log("Geolocation not supported");
//     }
//   }

//   const getCoordinates = (position) => {
//     console.log("position :>> ", position);
//     const { latitude, longitude } = position.coords;
//     setCoordinates({
//       latitude: position.coords.latitude,
//       longitude: position.coords.longitude,
//     });
//   };
//   useEffect(() => {
//     getLocation();
//   }, []);

//   useEffect(() => {
//     //! Initialize leaflet map
//     const map = L.map("map").setView(
//       [coordinates.latitude, coordinates.longitude],
//       13
//     );
//     L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
//       maxZoom: 19,
//       attribution:
//         '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
//     }).addTo(map);

//     const marker1 = L.marker([
//       coordinates.latitude,
//       coordinates.longitude,
//     ]).addTo(map);
//     const marker2 = L.marker([52.516266, 13.377775]).addTo(map);
//     const circle = L.circle([52.516266, 13.377775], {
//       color: "red",
//       fillColor: "#f03",
//       fillOpacity: 0.5,
//       radius: 500,
//     }).addTo(map);
//     // const polygon = L.polygon([
//     //   [51.509, -0.08],
//     //   [51.503, -0.06],
//     //   [51.51, -0.047],
//     // ]).addTo(map);
//     marker1.bindPopup("<b>Hello world!</b><br>I am a popup.").openPopup();
//     marker2.bindPopup("<b>Hello world!</b><br>I am a popup too.").openPopup();
//     // circle.bindPopup("I am a circle.");
//     // polygon.bindPopup("I am a polygon.");

//     // Cleanup function to remove the map when the component unmounts
//     return () => {
//       map.remove();
//     };
//   }, []);

//   return (
//     <>
//       <Head>
//         <title>LiLu</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/favicon.ico" />

//         <script
//           src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
//           integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
//           crossOrigin=""
//         ></script>
//       </Head>
//       <link
//         rel="stylesheet"
//         href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
//         integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
//         crossOrigin=""
//       />
//       {/*! my map container */}
//       <div id="map" className="h-screen"></div>
//     </>
//   );
// }
// export default Map;
